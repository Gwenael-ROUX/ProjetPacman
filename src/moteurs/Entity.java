package moteurs;import moteurs.physics.Collider;import java.util.Objects;public abstract class Entity {    private Position position;    private Collider collider;    private String name;    protected boolean crossable;    public Entity(Position position, Collider collider, String name, boolean crossable){        this.position = position;        this.collider = collider;        this.name = name;        this.crossable = crossable;    }    public Entity(Entity entity){        position = entity.getPosition();        collider = entity.getCollider();        name = entity.getName();        crossable = entity.isCrossable();    }    public void move(Position nextPosition){        collider.move(nextPosition);        position.setX(nextPosition.getX());        position.setY(nextPosition.getY());    }    public boolean isCrossable(){        return crossable;    }    public Position getPosition() {        return position;    }    public Collider getCollider(){        return collider;    }    public String getName() {        return name;    }    /*@Override    public boolean equals(Object o) {        if (this == o) return true;        if (!(o instanceof Entity)) return false;        Entity entity = (Entity) o;        return isCrossable == entity.isCrossable &&                Objects.equals(position, entity.position) &&                Objects.equals(collider, entity.collider) &&                Objects.equals(name, entity.name);    }*/    @Override    public int hashCode() {        return Objects.hash(position, collider, name, crossable);    }}