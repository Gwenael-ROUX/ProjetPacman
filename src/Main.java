import gameplay.EntityCharacter;import gameplay.ImageEntity;import gameplay.LevelGenerator;        import javafx.application.Application;        import javafx.scene.Group;        import javafx.scene.Scene;        import javafx.scene.image.Image;        import javafx.scene.image.ImageView;        import javafx.scene.paint.Color;        import javafx.stage.Stage;        import gameplay.PacmanGame;        import moteurs.Entity;        import moteurs.Position;        import moteurs.controllers.KeyboardController;        import moteurs.physics.BoxCollider;        import moteurs.physics.Physics;        import java.util.Timer;public class Main extends Application {    private Timer timer;    public static void main(String[] args) {        launch(args);    }    @Override    public void start(Stage stage) {        ImageView pacmanImageView = new ImageView(new Image(Main.class.getResourceAsStream("/Image/Pacman.png")));        KeyboardController pacmanController = new KeyboardController();        Physics pacmanPhysics = new Physics(10, 1);        pacmanImageView.setFitHeight(20);        pacmanImageView.setFitWidth(20);        pacmanImageView.setX(10);        pacmanImageView.setY(10);        EntityCharacter pacman = new EntityCharacter(new Position(20, 20),                new BoxCollider(new Position(10, 10), new Position(30, 30)), "pacman",                pacmanImageView, pacmanController, pacmanPhysics);        EntityCharacter[] behaviours = new EntityCharacter[3];        LevelGenerator lvl = new LevelGenerator(600,600,"/Level/level1.txt");        Entity[][] entities = lvl.getMatrix();        Group root = new Group();        int ind = 0;        for (Entity[] ent:entities){            for (Entity e:ent){                if (e != null){                    ImageEntity test = (ImageEntity) e;                    root.getChildren().add(test.getImageView());                    if (!e.getName().equals("mur")){                        EntityCharacter test1 = (EntityCharacter) test;                        if (e.getName().equals("pacman"))                            pacman = test1;                        behaviours[ind] = test1;                        ++ind;                    }                }            }        }        PacmanGame game = new PacmanGame(new Position(600, 600), behaviours);        timer = new Timer();        timer.scheduleAtFixedRate(game, 0, 50); // Vitesse de rafraichissement        Scene scene = new Scene(root,600,600);        KeyboardController controller = (KeyboardController) pacman.getController();        scene.setOnKeyPressed(controller.getEventHandler());        scene.setFill(Color.BLACK);        stage.setTitle("PacMan");        stage.setScene(scene);        stage.show();    }    @Override    public void stop(){        timer.cancel();    }}