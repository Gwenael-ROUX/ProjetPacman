import gameplay.EntityCharacter;import gameplay.LevelGenerator;import javafx.application.Application;import javafx.scene.Group;import javafx.scene.Scene;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.paint.Color;import javafx.stage.Stage;import gameplay.PacmanGame;import moteurs.Entity;import moteurs.Position;import moteurs.controllers.KeyboardController;import moteurs.controllers.ai.AI;import moteurs.controllers.ai.RandomAI;import moteurs.physics.BoxCollider;import moteurs.physics.Physics;import java.util.Timer;public class Main extends Application {    private Timer timer;    public static void main(String[] args) {        launch(args);    }    @Override    public void start(Stage stage) {        ImageView pacmanImageView = new ImageView(new Image(Main.class.getResourceAsStream("/Image/Pacman.png")));        KeyboardController pacmanController = new KeyboardController();        Physics pacmanPhysics = new Physics(10, 1);        pacmanImageView.setFitHeight(20);        pacmanImageView.setFitWidth(20);        pacmanImageView.setX(10);        pacmanImageView.setY(10);        EntityCharacter pacman = new EntityCharacter(new Position(20, 20),                new BoxCollider(new Position(10, 10), new Position(30, 30)),                pacmanImageView, pacmanController, pacmanPhysics, "pacman");        ImageView ghostImageView = new ImageView(new Image(Main.class.getResourceAsStream("Image/GhostRed.png")));        AI ghostController = new RandomAI();        Physics ghostPhysics = new Physics(10, 1);        ghostImageView.setFitHeight(20);        ghostImageView.setFitWidth(20);        ghostImageView.setX(110);        ghostImageView.setY(110);        EntityCharacter ghost = new EntityCharacter(new Position(120, 120),                new BoxCollider(new Position(110,10),new Position(130,30)),                ghostImageView, ghostController, ghostPhysics, "ghost");        ImageView ghostImageView1 = new ImageView(new Image(LevelGenerator.class.getResourceAsStream("/Image/GhostRed.png")));        AI ghostController1 = new RandomAI();        Physics ghostPhysics1 = new Physics(10, 1);        ghostImageView1.setFitHeight(20);        ghostImageView1.setFitWidth(20);        ghostImageView1.setX(52);        ghostImageView1.setY(55);        EntityCharacter ghost1 = new EntityCharacter(new Position(55, 55),                new BoxCollider(new Position(20, 20-10),new Position(200+10, 20+10)),                ghostImageView1, ghostController1, ghostPhysics1, "ghost1");        EntityCharacter[] behaviours = new EntityCharacter[3];        behaviours[0] = ghost;        behaviours[1] = pacman;        LevelGenerator lvl = new LevelGenerator(600,600,"/Level/level1.txt");        Entity[][] entities = lvl.getMatrix();        int ind = 0;        for (Entity[] ent:entities){            for (Entity e:ent){                if (e != null){                    EntityCharacter test = (EntityCharacter) e;                    if (test.getName().equals("pacman"))                        pacman = test;                    else if (test.getName().equals("ghost"))                        ghost = test;                    else if (test.getName().equals("ghost1"))                        ghost1 = test;                    behaviours[ind] = test;                    ++ind;                }            }        }        PacmanGame game = new PacmanGame(new Position(600, 600), behaviours);        timer = new Timer();        timer.scheduleAtFixedRate(game, 0, 100); // Vitesse de rafraichissement        Group root = new Group();        root.getChildren().add(pacman.getImageView());        root.getChildren().add(ghost.getImageView());        root.getChildren().add(ghost1.getImageView());        Scene scene = new Scene(root,600,600);        KeyboardController controller = (KeyboardController) pacman.getController();        scene.setOnKeyPressed(controller.getEventHandler());        scene.setFill(Color.BLACK);        stage.setTitle("PacMan");        stage.setScene(scene);        stage.show();    }    @Override    public void stop(){        timer.cancel();    }}